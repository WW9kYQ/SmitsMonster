package fr.atlantique.imt.inf211.jobmngt.entity;
// Generated 28 f√©vr. 2025, 21:16:57 by Hibernate Tools 5.6.15.Final


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import jakarta.persistence.GenerationType;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.GeneratedValue;

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrimaryKeyJoinColumn;
import jakarta.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Applicationmessage generated by hbm2java
 */
@Entity
@Table(name = "applicationmessage"
        , schema = "public"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class ApplicationMessage implements java.io.Serializable {


    private int idmess;
    private Application application;
    private Message message;
    private Set<JobOffer> jobOffers = new HashSet<JobOffer>(0);

    public ApplicationMessage() {
    }


    public ApplicationMessage(Message message) {
        this.message = message;
    }

    public ApplicationMessage(Application application, Message message, Set<JobOffer> jobOffers) {
        this.application = application;
        this.message = message;
        this.jobOffers = jobOffers;
    }

    @Id
    @SequenceGenerator(name = "APPLICATIONMESSAGE_ID_GENERATOR", sequenceName = "APPLICATIONMESSAGE_ID_SEQ", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "APPLICATIONMESSAGE_ID_GENERATOR")


    @Column(name = "idmess", unique = true, nullable = false)
    public int getIdmess() {
        return this.idmess;
    }

    public void setIdmess(int idmess) {
        this.idmess = idmess;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idapp")
    public Application getApplication() {
        return this.application;
    }

    public void setApplication(Application application) {
        this.application = application;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    public Message getMessage() {
        return this.message;
    }

    public void setMessage(Message message) {
        this.message = message;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "offermessdest", schema = "public", joinColumns = {
            @JoinColumn(name = "idmessapp", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "iddestoffer", nullable = false, updatable = false)})
    public Set<JobOffer> getJoboffers() {
        return this.jobOffers;
    }

    public void setJoboffers(Set<JobOffer> jobOffers) {
        this.jobOffers = jobOffers;
    }


}


