package fr.atlantique.imt.inf211.jobmngt.entity;
// Generated 28 f√©vr. 2025, 21:16:57 by Hibernate Tools 5.6.15.Final


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import jakarta.persistence.GenerationType;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.GeneratedValue;

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrimaryKeyJoinColumn;
import jakarta.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name = "company"
        , schema = "public"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Company implements java.io.Serializable {


    private String mail;
    private UserApp userapp;
    private String denomination;
    private String description;
    private Set<JobOffer> jobOffers = new HashSet<JobOffer>(0);

    public Company() {
    }


    public Company(UserApp userapp, String denomination) {
        this.userapp = userapp;
        this.denomination = denomination;
    }

    public Company(UserApp userapp, String denomination, String description, Set<JobOffer> jobOffers) {
        this.userapp = userapp;
        this.denomination = denomination;
        this.description = description;
        this.jobOffers = jobOffers;
    }

    @GenericGenerator(name = "CompanyIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userapp"))
    @Id
    @GeneratedValue(generator = "CompanyIdGenerator")


    @Column(name = "mail", unique = true, nullable = false)
    public String getMail() {
        return this.mail;
    }

    public void setMail(String mail) {
        this.mail = mail;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    public UserApp getUserapp() {
        return this.userapp;
    }

    public void setUserapp(UserApp userapp) {
        this.userapp = userapp;
    }


    @Column(name = "denomination", nullable = false)
    public String getDenomination() {
        return this.denomination;
    }

    public void setDenomination(String denomination) {
        this.denomination = denomination;
    }


    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "company")
    public Set<JobOffer> getJoboffers() {
        return this.jobOffers;
    }

    public void setJoboffers(Set<JobOffer> jobOffers) {
        this.jobOffers = jobOffers;
    }


}


