package fr.atlantique.imt.inf211.jobmngt.entity;
// Generated 28 f√©vr. 2025, 21:16:57 by Hibernate Tools 5.6.15.Final


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import jakarta.persistence.*;

import java.util.HashSet;
import java.util.Set;

/**
 * Field generated by hbm2java
 */
@Entity
@Table(name = "field", schema = "public")
@NamedQueries({
        @NamedQuery(name = "Field.findAll", query = "SELECT f FROM Field f order by f.id ASC"),
        @NamedQuery(name = "Field.findByLabel", query = "SELECT f FROM Field f WHERE f.label = :label"),
        @NamedQuery(name = "Field.countAll", query = "select count(*) from Field f"),
        @NamedQuery(name = "Field.findById", query = "SELECT f FROM Field f WHERE f.id = :id")
})
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Field implements java.io.Serializable {


    private int id;
    private String label;
    private Set<Application> applications = new HashSet<Application>(0);
    private Set<JobOffer> jobOffers = new HashSet<JobOffer>(0);

    public Field() {
    }


    public Field(int id, String label) {
        this.id = id;
        this.label = label;
    }

    public Field(int id, String label, Set<Application> applications, Set<JobOffer> jobOffers) {
        this.id = id;
        this.label = label;
        this.applications = applications;
        this.jobOffers = jobOffers;
    }

    @Id
    @SequenceGenerator(name = "FIELD_ID_GENERATOR", sequenceName = "FIELD_ID_SEQ", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "FIELD_ID_GENERATOR")


    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }


    @Column(name = "label", nullable = false)
    public String getLabel() {
        return this.label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "applicationfields", schema = "public", joinColumns = {@JoinColumn(name = "idfield", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "appid", nullable = false, updatable = false)})

    public Set<Application> getApplications() {
        return this.applications;
    }

    public void setApplications(Set<Application> applications) {
        this.applications = applications;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "offerfields", schema = "public", joinColumns = {@JoinColumn(name = "idfield", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "offerid", nullable = false, updatable = false)})
    public Set<JobOffer> getJoboffers() {
        return this.jobOffers;
    }

    public void setJoboffers(Set<JobOffer> jobOffers) {
        this.jobOffers = jobOffers;
    }


}


